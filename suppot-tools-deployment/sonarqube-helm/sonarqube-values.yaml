USER-SUPPLIED VALUES:
OpenShift:
  createSCC: false
  enabled: false
  route:
    annotations: {}
    enabled: false
    host: sonarqube.your-org.com
    path: /
    tls:
      termination: edge
    wildcardPolicy: None
affinity: {}
annotations: {}
caCerts:
  enabled: false
community:
  enabled: true
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  runAsGroup: 0
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault
deploymentStrategy:
  type: Recreate
deploymentType: StatefulSet
elasticsearch:
  bootstrapChecks: true
  configureNode: false
extraConfig:
  configmaps: []
  secrets: []
extraContainers: []
extraInitContainers: {}
extraVolumeMounts: []
extraVolumes: []
hostAliases: []
httpProxy: ""
httpProxySecret: ""
httproute:
  enabled: false
httpsProxy: ""
image:
  pullPolicy: IfNotPresent
  repository: sonarqube
ingress:
  annotations: {}
  enabled: false
  hosts:
  - name: sonarqube.your-org.com
  tls: []
ingress-nginx:
  enabled: false
initContainers:
  resources: {}
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
initFs:
  enabled: true
  securityContext:
    capabilities:
      add:
      - CHOWN
      drop:
      - ALL
    privileged: false
    readOnlyRootFilesystem: true
    runAsGroup: 0
    runAsNonRoot: false
    runAsUser: 0
    seccompProfile:
      type: RuntimeDefault
initSysctl:
  enabled: true
  fsFileMax: 131072
  nofile: 131072
  nproc: 8192
  securityContext:
    privileged: true
    readOnlyRootFilesystem: true
    runAsUser: 0
  vmMaxMapCount: 524288
jdbcOverwrite:
  enabled: false
  jdbcPassword: sonarPass
  jdbcUrl: jdbc:postgresql://myPostgress/myDatabase
  jdbcUsername: sonarUser
jvmCeOpts: ""
jvmOpts: ""
livenessProbe:
  exec:
    command:
    - sh
    - -c
    - |
      wget --no-proxy --quiet -O /dev/null --timeout={{ .Values.livenessProbe.timeoutSeconds }} --header="X-Sonar-Passcode: $SONAR_WEB_SYSTEMPASSCODE" "http://localhost:{{ .Values.service.internalPort }}{{ .Values.livenessProbe.sonarWebContext | default (include "sonarqube.webcontext" .) }}api/system/liveness"
  failureThreshold: 6
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 1
monitoringPasscode: my-secure-passcode
networkPolicy:
  enabled: false
  prometheusNamespace: monitoring
noProxy: ""
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  annotations: {}
  enabled: true
  guid: 0
  size: 5Gi
  storageClass: local-path
  uid: 1000
plugins:
  install: []
  noCheckCertificate: false
podLabels: {}
postgresql:
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    seccompProfile:
      type: RuntimeDefault
  enabled: true
  persistence:
    accessMode: ReadWriteOnce
    enabled: true
    size: 20Gi
    storageClass: null
  postgresqlDatabase: sonarDB
  postgresqlPassword: sonarPass
  postgresqlUsername: sonarUser
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 200Mi
  securityContext:
    enabled: true
    fsGroup: 1001
  service:
    port: 5432
  serviceAccount:
    enabled: false
  shmVolume:
    chmod:
      enabled: false
  volumePermissions:
    enabled: false
    securityContext:
      runAsUser: 0
prometheusExporter:
  ceBeanPort: 8001
  config:
    rules:
    - pattern: .*
  enabled: false
  noCheckCertificate: false
  version: 0.17.2
  webBeanPort: 8000
prometheusMonitoring:
  podMonitor:
    enabled: false
    interval: 30s
readinessProbe:
  exec:
    command:
    - sh
    - -c
    - |
      #!/bin/bash
      # A Sonarqube container is considered ready if the status is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING
      # status about migration are added to prevent the node to be kill while SonarQube is upgrading the database.
      if wget --no-proxy -qO- http://localhost:{{ .Values.service.internalPort }}{{ .Values.readinessProbe.sonarWebContext | default (include "sonarqube.webcontext" .) }}api/system/status | grep -q -e '"status":"UP"' -e '"status":"DB_MIGRATION_NEEDED"' -e '"status":"DB_MIGRATION_RUNNING"'; then
        exit 0
      fi
      exit 1
  failureThreshold: 6
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 1
replicaCount: 1
resources:
  limits:
    cpu: 800m
    ephemeral-storage: 512000M
    memory: 6144M
  requests:
    cpu: 400m
    ephemeral-storage: 1536M
    memory: 2048M
revisionHistoryLimit: 10
securityContext:
  fsGroup: 0
service:
  annotations: {}
  externalPort: 9000
  internalPort: 9000
  labels: null
  type: ClusterIP
serviceAccount:
  annotations: {}
  automountToken: false
  create: false
sonarWebContext: ""
sonarqubeFolder: /opt/sonarqube
startupProbe:
  failureThreshold: 24
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
terminationGracePeriodSeconds: 60
tests:
  enabled: true
  image: ""
  resources:
    limits:
      cpu: 500m
      ephemeral-storage: 1000M
      memory: 200M
    requests:
      cpu: 500m
      ephemeral-storage: 100M
      memory: 200M
tolerations: []
